version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data

  backend:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - redis
      - elasticsearch

  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - '3000:3000'
    depends_on:
      - backend

  seller-portal:
    build:
      context: ../apps/seller-portal
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - '3001:3001'
    depends_on:
      - backend

  admin:
    build:
      context: ../apps/admin
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - '3002:3002'
    depends_on:
      - backend

  mobile:
    build:
      context: ../apps/mobile
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - '3003:3003'
    depends_on:
      - backend

volumes:
  postgres_data:
  esdata:
